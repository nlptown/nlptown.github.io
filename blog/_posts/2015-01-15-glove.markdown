---
layout: post
title:  "Notable NLP: GloVe &mdash; Global Vectors for Word Representations"
date:   2015-01-15 9:00:00
tags: NLP semantics meaning words glove vectors notable
comments: true
---

<p class="first">In NLP research, models of word meaning are making a comeback. While previously, attention seemed to shift from words to phrases and sentences, word meaning is again at the forefront of research. Maybe people have figured out that, before we can capture phrases and sentences correctly, we need better models of word meaning first. One particularly interesting contribution last year came from Stanford, with Jeffrey Pennington, Richard Socher and Christopher D. Manning presenting <a href="http://nlp.stanford.edu/projects/glove/glove.pdf">GloVe: Global Vectors for Word Meaning</a>.</p> 

<p>In recent years, two main types of models of word meaning have emerged: <i>matrix factorization methods</i> such as <a href="http://lsa.colorado.edu/papers/dp1.LSAintro.pdf">Latent Semantic Analysis</a>, which work on the basis of global co-occurrence counts of words in a corpus, and <i>local context window methods</i> such as <a href="http://research.microsoft.com/pubs/189726/rvecs.pdf">Mikolov et al.’s skip-gram model</a>, which are trained on local co-occurrences. Pennington et al. position themselves in the first group, as GloVe, short for Global Vectors, relies on global corpus statistics rather than local context.</p>

<p>One thing I like about Pennington et al.’s approach is their commitment to finding word vectors with semantically meaningful dimensions. They do this by building a model that is biased towards  dimensions of meaning that potentially distinguish between two words, such as gender. They start by defining a learning function that gives a value for a combination of two target words and a context word. The ideal outcome of such a function, they claim, is the ratio between the co-occurrence probabilities of those target words with that context word. When a context word is highly correlated with one of the target words, this ratio will be either very high or very low; when it does not distinguish between the words, this ratio will lie around 1. That sounds logical enough.</p>

<p class="nomargin">In addition, Pennington et al. continue, this function <i>F</i> should have some other desirable characteristics:</p> 
<ul><li>Because vector spaces are inherently linear, <i>F</i> should depend only on the difference between the vectors of the two target words.</li>
<li><i>F</i>  should not mix the dimensions of the word vectors in undesirable ways.</li>
<li>Because the distinction between a target word and a context word is irrelevant, <i>F</i>  should be invariant when these words are swapped.</li>
</ul>

<p>After identifying a suitable candidate, Pennington et al. use it to factorize an initial global co-occurrence matrix into a matrix with fewer dimensions, which are more semantically meaningful. In particular, they cast the factorization of the co-occurrence matrix as a least-squares problem that involves the logarithm of the original co-occurrence values and a weighting function that manages the impact of rare and frequent co-occurrences.</p> 

<p>Through a number of experiments, they then shown that the resulting word vectors perform very well across a variety of tasks, including a word analogy task that requires them to answer questions like “Athens is to Greece as Berlin is to ___”. As with all models of this kind, performance depends heavily on a number of parameter settings: the context window for the co-occurrences has an optimal size of 10 words, and the word vectors ideally have around 300 dimensions.</p> 

<p>In addition to the paper, the <a href="http://nlp.stanford.edu/projects/glove/">accompanying website</a> shows that the final word matrix captures a number of semantic distinctions very nicely. For example, word pairs like <i>man-woman</i>, <i>brother-sister</i> and <i>king-queen</i> differ along the same dimensions. There’s only a small number of examples, but it’s really fascinating stuff.</p> 

<img class="centered" src="http://nlp.stanford.edu/projects/glove/images/man_woman.jpg" height="400" width="400" />

<p>Unsurprisingly, GloVe has generated quite some interest. The code is freely available from <a href="http://nlp.stanford.edu/projects/glove/">the Stanford website</a>, just like several sets of pre-trained word vectors. Someone wrote a <a href="http://www.foldl.me/2014/glove-python/">helpful tutorial for coding GloVe in Python</a>, and there’s <a href="https://github.com/maciejkula/glove-python">another toy implementation</a> on Github. While most people are impressed by GloVe's performance, other reactions have been lukewarm, arguing that <a href="https://docs.google.com/document/d/1ydIujJ7ETSZ688RGfU5IMJJsbxAi-kRl8czSwpti15s/edit#heading=h.66rkmh7nd17u">the GloVe paper makes an unfair comparison with other competing methods</a>.</p>

<p>Lately there has been some kind of arms race for the best word vectors, with several types of models competing. While this is surely a good thing, we shouldn’t forget word vectors can only give an abstract approximation of word meaning, no matter how good they are. The meaning of a word is not just some average of all its uses in a corpus: for each occurrence it crucially depends on the local context in which the word is used. Among all attention that word meaning is now getting, modelling the local meaning of a single occurrence of a word is a challenge I would love to see addressed more often.</p>




